######################################################### \
#### User MCU and TMCs wiring definition file ###########  + --> Everything MCU related :)
######################################################### /

# This file is yours: keep in mind that it will not be erased when updating
# the config using moonraker and it will be kept as you've set it.

# Put here all your wiring definitions, your MCU serial port, CANbus UUID, etc...
# It should be populated automatically with some default wiring templates during
# the first time install of the config if you choose to do so when asked by the
# script. If it's not the case, you will need to manually define all your
# [board_pins] section. You can use the pinout documentation here: ./docs/pinout.md

# ------------------------------------------------------------------------------------------

#--------------------------------------#
#### BTT Octopus MCU definition ########
#--------------------------------------#

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_35003B000A50535556323420-if00


[include config/BTT_Octopus.cfg] # Do not remove this line
[board_pins octopus_mcu]
mcu: mcu
aliases:
    X_STEP=MCU_MOTOR0_STEP   , X_DIR=MCU_MOTOR0_DIR   , X_ENABLE=MCU_MOTOR0_ENABLE   , X_TMCUART=MCU_MOTOR0_UART   ,
    Y_STEP=MCU_MOTOR1_STEP   , Y_DIR=MCU_MOTOR1_DIR   , Y_ENABLE=MCU_MOTOR1_ENABLE   , Y_TMCUART=MCU_MOTOR1_UART   ,

    Z_STEP=MCU_MOTOR2_1_STEP , Z_DIR=MCU_MOTOR2_1_DIR , Z_ENABLE=MCU_MOTOR2_1_ENABLE , Z_TMCUART=MCU_MOTOR2_1_UART ,
    Z1_STEP=MCU_MOTOR3_STEP  , Z1_DIR=MCU_MOTOR3_DIR  , Z1_ENABLE=MCU_MOTOR3_ENABLE  , Z1_TMCUART=MCU_MOTOR3_UART  ,
    Z2_STEP=MCU_MOTOR4_STEP  , Z2_DIR=MCU_MOTOR4_DIR  , Z2_ENABLE=MCU_MOTOR4_ENABLE  , Z2_TMCUART=MCU_MOTOR4_UART  ,
    Z3_STEP=MCU_MOTOR5_STEP  , Z3_DIR=MCU_MOTOR5_DIR  , Z3_ENABLE=MCU_MOTOR5_ENABLE  , Z3_TMCUART=MCU_MOTOR5_UART  ,

    E_STEP=MCU_MOTOR7_STEP   , E_DIR=MCU_MOTOR7_DIR   , E_ENABLE=MCU_MOTOR7_ENABLE   , E_TMCUART=MCU_MOTOR7_UART   ,

    DRIVER_SPI_MOSI=EXP2_6 , # Used in case of SPI drivers such as TMC2240 or TMC5160
    DRIVER_SPI_MISO=EXP2_1 , # Used in case of SPI drivers such as TMC2240 or TMC5160
    DRIVER_SPI_SCK=EXP2_2  , # Used in case of SPI drivers such as TMC2240 or TMC5160

    X_STOP=MCU_STOP0 , Y_STOP=MCU_STOP1 , Z_STOP=MCU_STOP2 ,
    PROBE_INPUT=MCU_STOP7  ,
    

    E_HEATER=MCU_HE2   , E_TEMPERATURE=MCU_T2   ,
    BED_HEATER=MCU_HE1 , BED_TEMPERATURE=MCU_TB ,

    PART_FAN=MCU_FAN5 , E_FAN=MCU_FAN4 ,
    CONTROLLER_FAN=MCU_FAN2        ,
    DRIVERS_FAN=MCU_FAN1        ,
    FILTER_FAN=MCU_FAN3            ,
    BEDFANS_OUTER=MCU_FAN0 ,
    

    CHAMBER_TEMPERATURE=MCU_T1 ,
    GANTRY_TEMPERATURE=MCU_T0 ,

    # LIGHT_OUTPUT=MCU_SERVOS         ,
    # RUNOUT_SENSOR=MCU_SERVOS ,
    # HOST_CONTROLLER_FAN=MCU_FAN5   ,
    LIGHT_NEOPIXEL=MCU_SERVOS     ,
    # STATUS_NEOPIXEL=MCU_NEOPIXEL ,

[mcu rpi] 
serial: /tmp/klipper_host_mcu


[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_219D819E5154364134202020FF154324-if00
x_offset: 0
y_offset: 24
mesh_main_direction: x
mesh_runs: 2
home_xy_position: 173,173
home_z_hop: 5
lift_speed: 100
home_z_hop_speed: 100
home_xy_move_speed: 350
home_method: contact # use proximity for induction homing
home_method_when_homed: proximity # after initial calibration use induction
home_autocalibrate: never # contact will calibrate beacon on first home
home_gcode_pre_x: _HOME_PRE_AXIS AXIS=X
home_gcode_post_x: _HOME_POST_AXIS AXIS=X
home_gcode_pre_y: _HOME_PRE_AXIS AXIS=Y
home_gcode_post_y: _HOME_POST_AXIS AXIS=Y




